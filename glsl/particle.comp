#version 460

struct Particle {
    vec4 position;
    vec4 velocity;
    vec4 color;
};

layout(set = 0, binding = 2) uniform  Cursor{
	vec4 pos;
} cursor;

layout(std140, binding = 0) readonly buffer ParticleSSBOIn {
   Particle particlesIn[ ];
};

layout(std140, binding = 1) buffer ParticleSSBOOut {
   Particle particlesOut[ ];
};

layout (local_size_x = 64, local_size_y = 1, local_size_z = 1) in;

void main() 
{
    uint index = gl_GlobalInvocationID.x;  
    Particle particleIn = particlesIn[index];
    vec4 dir1 = cursor.pos - particleIn.position;
    vec4 G = normalize(dir1);
    particlesOut[index].velocity = particleIn.velocity + G * 0.025f;
    particlesOut[index].position = particleIn.position + particleIn.velocity * 0.025 + G * 0.025f * 0.025;
}